---
# tasks file for common

- name: clean yum metadata cache
  command: yum clean metadata
  args:
    warn: false

- name: clean yum makecache
  command: yum makecache
  args:
    warn: false

- name: Install epel-release
  yum:
    name:
      - epel-release
    state: latest

- name: clean yum makecache
  command: yum makecache
  args:
    warn: false

- name: Install GCC
  shell: |
    sudo yum -y groupinstall "Development Tools"
    gcc --version
  register: gcc_out
- debug: var=gcc_out.stdout_lines

- name: Install Additional dependencies
  yum:
    name:
      - openssl-devel
      - bzip2-devel
      - libffi-devel
      - xz-devel
    state: latest

### Python 2.7  ###

- name: Install python 2 pip
  yum:
    name:
      - python-pip
    state: latest
  debugger: on_failed

- name: Verify python 2 pip
  shell: "pip --version"
  register: pip2
- debug: var=pip2.stdout_lines

- name: Update pip 2
  shell: "sudo pip install --upgrade pip==20.3.4"

- name: Verify python 2 pip version
  shell: "pip --version"
  register: version
- debug: var=version.stdout_lines

###################

### Python 3  ###

- name: Install python3
  yum:
    name:
      - python3
    state: latest
  debugger: on_failed

- name: Download Python 3.8
  get_url:
    url: https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz
    dest: /tmp/Python-3.8.12.tgz

- name: Unarchive Python 3.8 installer
  unarchive:
    src: /tmp/Python-3.8.12.tgz
    dest: /usr/bin
    copy: no

- name: Execute Python 3.8 installer
  shell: |
    cd /usr/bin/Python-3.8.12/
    ./configure --enable-optimizations
    sudo make altinstall
  register: installer
- debug: var=installer.stdout_lines


- name: Copy Python 3.8 installation artifacts
  become: true
  ansible.builtin.copy:
    src: "/usr/local/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: '0755'
    force: yes
    remote_src: yes
  with_items:
    - python3.8
    - python3.8-config
    - pip3.8
    - 2to3-3.8
    - idle3.8
    - pydoc3.8

- name: Verify Python 3.8 version
  shell: "python3.8 --version"
  register: version
- debug: var=version.stdout_lines

- name: Link Python 3 version
  shell: |
    ls /usr/bin/python3*
    sudo ln -sf /usr/bin/python3.8 /usr/bin/python3
    python3 --version
  register: version
- debug: var=version.stdout_lines

- name: Link Pip 3 version
  shell: |
    sudo ln -sf /usr/bin/pip3.8 /usr/bin/pip3
    pip3 --version
  register: version
- debug: var=version.stdout_lines

- name: Verify python 3 pip version
  shell: "pip3 --version"
  register: version
- debug: var=version.stdout_lines

###################
